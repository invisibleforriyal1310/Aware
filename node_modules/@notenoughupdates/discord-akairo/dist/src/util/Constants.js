"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.BuiltInReasons = exports.ContextCommandHandlerEvents = exports.CommandHandlerEvents = exports.AkairoHandlerEvents = exports.ArgumentTypes = exports.ArgumentMatches = void 0;
var ArgumentMatches;
(function (ArgumentMatches) {
    ArgumentMatches["PHRASE"] = "phrase";
    ArgumentMatches["FLAG"] = "flag";
    ArgumentMatches["OPTION"] = "option";
    ArgumentMatches["REST"] = "rest";
    ArgumentMatches["SEPARATE"] = "separate";
    ArgumentMatches["TEXT"] = "text";
    ArgumentMatches["CONTENT"] = "content";
    ArgumentMatches["REST_CONTENT"] = "restContent";
    ArgumentMatches["NONE"] = "none";
})(ArgumentMatches = exports.ArgumentMatches || (exports.ArgumentMatches = {}));
var ArgumentTypes;
(function (ArgumentTypes) {
    ArgumentTypes["STRING"] = "string";
    ArgumentTypes["LOWERCASE"] = "lowercase";
    ArgumentTypes["UPPERCASE"] = "uppercase";
    ArgumentTypes["CHAR_CODES"] = "charCodes";
    ArgumentTypes["NUMBER"] = "number";
    ArgumentTypes["INTEGER"] = "integer";
    ArgumentTypes["BIGINT"] = "bigint";
    ArgumentTypes["EMOJINT"] = "emojint";
    ArgumentTypes["URL"] = "url";
    ArgumentTypes["DATE"] = "date";
    ArgumentTypes["COLOR"] = "color";
    ArgumentTypes["USER"] = "user";
    ArgumentTypes["USERS"] = "users";
    ArgumentTypes["MEMBER"] = "member";
    ArgumentTypes["MEMBERS"] = "members";
    ArgumentTypes["RELEVANT"] = "relevant";
    ArgumentTypes["RELEVANTS"] = "relevants";
    ArgumentTypes["CHANNEL"] = "channel";
    ArgumentTypes["CHANNELS"] = "channels";
    ArgumentTypes["TEXT_CHANNEL"] = "textChannel";
    ArgumentTypes["TEXT_CHANNELS"] = "textChannels";
    ArgumentTypes["VOICE_CHANNEL"] = "voiceChannel";
    ArgumentTypes["VOICE_CHANNELS"] = "voiceChannels";
    ArgumentTypes["CATEGORY_CHANNEL"] = "categoryChannel";
    ArgumentTypes["CATEGORY_CHANNELS"] = "categoryChannels";
    ArgumentTypes["NEWS_CHANNEL"] = "newsChannel";
    ArgumentTypes["NEWS_CHANNELS"] = "newsChannels";
    ArgumentTypes["STAGE_CHANNEL"] = "stageChannel";
    ArgumentTypes["STAGE_CHANNELS"] = "stageChannels";
    ArgumentTypes["THREAD_CHANNEL"] = "threadChannel";
    ArgumentTypes["THREAD_CHANNELS"] = "threadChannels";
    ArgumentTypes["DIRECTORY_CHANNEL"] = "directoryChannel";
    ArgumentTypes["DIRECTORY_CHANNELS"] = "directoryChannels";
    ArgumentTypes["FORUM_CHANNEL"] = "forumChannel";
    ArgumentTypes["FORUM_CHANNELS"] = "forumChannels";
    ArgumentTypes["TEXT_BASED_CHANNEL"] = "textBasedChannel";
    ArgumentTypes["TEXT_BASED_CHANNELS"] = "textBasedChannels";
    ArgumentTypes["VOICE_BASED_CHANNEL"] = "voiceBasedChannel";
    ArgumentTypes["VOICE_BASED_CHANNELS"] = "voiceBasedChannels";
    ArgumentTypes["ROLE"] = "role";
    ArgumentTypes["ROLES"] = "roles";
    ArgumentTypes["EMOJI"] = "emoji";
    ArgumentTypes["EMOJIS"] = "emojis";
    ArgumentTypes["GUILD"] = "guild";
    ArgumentTypes["GUILDS"] = "guilds";
    ArgumentTypes["MESSAGE"] = "message";
    ArgumentTypes["GUILD_MESSAGE"] = "guildMessage";
    ArgumentTypes["RELEVANT_MESSAGE"] = "relevantMessage";
    ArgumentTypes["INVITE"] = "invite";
    ArgumentTypes["USER_MENTION"] = "userMention";
    ArgumentTypes["MEMBER_MENTION"] = "memberMention";
    ArgumentTypes["CHANNEL_MENTION"] = "channelMention";
    ArgumentTypes["ROLE_MENTION"] = "roleMention";
    ArgumentTypes["EMOJI_MENTION"] = "emojiMention";
    ArgumentTypes["COMMAND_ALIAS"] = "commandAlias";
    ArgumentTypes["COMMAND"] = "command";
    ArgumentTypes["INHIBITOR"] = "inhibitor";
    ArgumentTypes["LISTENER"] = "listener";
    ArgumentTypes["TASK"] = "task";
    ArgumentTypes["CONTEXT_MENU_COMMAND"] = "contextMenuCommand";
})(ArgumentTypes = exports.ArgumentTypes || (exports.ArgumentTypes = {}));
var AkairoHandlerEvents;
(function (AkairoHandlerEvents) {
    AkairoHandlerEvents["LOAD"] = "load";
    AkairoHandlerEvents["REMOVE"] = "remove";
})(AkairoHandlerEvents = exports.AkairoHandlerEvents || (exports.AkairoHandlerEvents = {}));
var CommandHandlerEvents;
(function (CommandHandlerEvents) {
    CommandHandlerEvents["COMMAND_BLOCKED"] = "commandBlocked";
    CommandHandlerEvents["COMMAND_BREAKOUT"] = "commandBreakout";
    CommandHandlerEvents["COMMAND_CANCELLED"] = "commandCancelled";
    CommandHandlerEvents["COMMAND_TIMEOUT"] = "commandTimeout";
    CommandHandlerEvents["COMMAND_FINISHED"] = "commandFinished";
    CommandHandlerEvents["COMMAND_INVALID"] = "commandInvalid";
    CommandHandlerEvents["COMMAND_LOCKED"] = "commandLocked";
    CommandHandlerEvents["COMMAND_STARTED"] = "commandStarted";
    CommandHandlerEvents["COOLDOWN"] = "cooldown";
    CommandHandlerEvents["ERROR"] = "error";
    CommandHandlerEvents["IN_PROMPT"] = "inPrompt";
    CommandHandlerEvents["MESSAGE_BLOCKED"] = "messageBlocked";
    CommandHandlerEvents["MESSAGE_INVALID"] = "messageInvalid";
    CommandHandlerEvents["MISSING_PERMISSIONS"] = "missingPermissions";
    CommandHandlerEvents["SLASH_BLOCKED"] = "slashBlocked";
    CommandHandlerEvents["SLASH_ERROR"] = "slashError";
    CommandHandlerEvents["SLASH_FINISHED"] = "slashFinished";
    CommandHandlerEvents["SLASH_MISSING_PERMISSIONS"] = "slashMissingPermissions";
    CommandHandlerEvents["SLASH_NOT_FOUND"] = "slashNotFound";
    CommandHandlerEvents["SLASH_STARTED"] = "slashStarted";
    CommandHandlerEvents["SLASH_ONLY"] = "slashOnly";
})(CommandHandlerEvents = exports.CommandHandlerEvents || (exports.CommandHandlerEvents = {}));
var ContextCommandHandlerEvents;
(function (ContextCommandHandlerEvents) {
    ContextCommandHandlerEvents["ERROR"] = "error";
    ContextCommandHandlerEvents["FINISHED"] = "finished";
    ContextCommandHandlerEvents["NOT_FOUND"] = "notFound";
    ContextCommandHandlerEvents["STARTED"] = "started";
    ContextCommandHandlerEvents["BLOCKED"] = "blocked";
})(ContextCommandHandlerEvents = exports.ContextCommandHandlerEvents || (exports.ContextCommandHandlerEvents = {}));
var BuiltInReasons;
(function (BuiltInReasons) {
    BuiltInReasons["CLIENT"] = "client";
    BuiltInReasons["BOT"] = "bot";
    BuiltInReasons["OWNER"] = "owner";
    BuiltInReasons["SUPER_USER"] = "superUser";
    BuiltInReasons["GUILD"] = "guild";
    BuiltInReasons["DM"] = "dm";
    BuiltInReasons["AUTHOR_NOT_FOUND"] = "authorNotFound";
    BuiltInReasons["NOT_NSFW"] = "notNsfw";
})(BuiltInReasons = exports.BuiltInReasons || (exports.BuiltInReasons = {}));
//# sourceMappingURL=Constants.js.map