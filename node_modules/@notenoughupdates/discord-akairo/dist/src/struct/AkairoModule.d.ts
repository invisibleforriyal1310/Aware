import { z } from "zod";
import type { Category } from "../util/Category.js";
import type { AkairoClient } from "./AkairoClient.js";
import type { AkairoHandler } from "./AkairoHandler.js";
export declare abstract class AkairoModule<Handler extends AkairoHandler<Module, Handler>, Module extends AkairoModule<Handler, Module>> {
    category: Category<string, this>;
    categoryID: string;
    client: AkairoClient;
    filepath: string;
    handler: Handler;
    id: string;
    constructor(id: string, options?: AkairoModuleOptions);
    reload(): Promise<Module>;
    remove(): Module;
    toString(): string;
}
export type AkairoModuleOptions = {
    category?: string;
};
export declare const AkairoModuleOptions: z.ZodObject<{
    category: z.ZodOptional<z.ZodString>;
}, "passthrough", z.ZodTypeAny, z.objectOutputType<{
    category: z.ZodOptional<z.ZodString>;
}, z.ZodTypeAny, "passthrough">, z.objectInputType<{
    category: z.ZodOptional<z.ZodString>;
}, z.ZodTypeAny, "passthrough">>;
//# sourceMappingURL=AkairoModule.d.ts.map