"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ContextMenuCommandOptions = exports.ContextMenuCommand = void 0;
const discord_js_1 = require("discord.js");
const zod_1 = require("zod");
const Util_js_1 = require("../../typings/Util.js");
const Util_js_2 = require("../../util/Util.js");
const AkairoModule_js_1 = require("../AkairoModule.js");
class ContextMenuCommand extends AkairoModule_js_1.AkairoModule {
    constructor(id, options) {
        exports.ContextMenuCommandOptions.parse(options);
        const { category, guilds = [], name, ownerOnly = false, superUserOnly = false, type, nameLocalizations, defaultMemberPermissions } = options;
        let { dmPermission } = options;
        if (dmPermission != null && guilds.length > 0)
            throw new TypeError("You cannot set `options.dmPermission` with commands configured with `options.guilds`.");
        if (guilds.length === 0)
            dmPermission ??= true;
        super(id, { category });
        this.guilds = guilds;
        this.name = name;
        this.ownerOnly = ownerOnly;
        this.superUserOnly = superUserOnly;
        this.type = type;
        this.nameLocalizations = nameLocalizations;
        this.defaultMemberPermissions = defaultMemberPermissions;
        this.dmPermission = dmPermission;
    }
}
exports.ContextMenuCommand = ContextMenuCommand;
(0, Util_js_2.patchAbstract)(ContextMenuCommand, "exec");
exports.ContextMenuCommandOptions = AkairoModule_js_1.AkairoModuleOptions.extend({
    guilds: zod_1.z.string().array().optional(),
    name: zod_1.z.string(),
    ownerOnly: zod_1.z.boolean().optional(),
    superUserOnly: zod_1.z.boolean().optional(),
    type: zod_1.z.union([zod_1.z.literal(discord_js_1.ApplicationCommandType.User), zod_1.z.literal(discord_js_1.ApplicationCommandType.Message)]),
    nameLocalizations: zod_1.z.record(zod_1.z.string().nullish()).optional(),
    defaultMemberPermissions: Util_js_1.PermissionResolvableValidator.nullish(),
    dmPermission: zod_1.z.boolean().optional()
}).passthrough();
//# sourceMappingURL=ContextMenuCommand.js.map