"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.TaskHandler = void 0;
const AkairoError_js_1 = require("../../util/AkairoError.js");
const AkairoHandler_js_1 = require("../AkairoHandler.js");
const Task_js_1 = require("./Task.js");
class TaskHandler extends AkairoHandler_js_1.AkairoHandler {
    constructor(client, options) {
        const { directory, classToHandle = Task_js_1.Task, extensions = [".js", ".ts"], automateCategories, loadFilter } = options;
        if (!(classToHandle.prototype instanceof Task_js_1.Task || classToHandle === Task_js_1.Task)) {
            throw new AkairoError_js_1.AkairoError("INVALID_CLASS_TO_HANDLE", classToHandle.name, Task_js_1.Task.name);
        }
        super(client, { directory, classToHandle, extensions, automateCategories, loadFilter });
    }
    startAll() {
        this.client.once("ready", () => {
            this.modules.forEach(module => {
                if (!(module instanceof Task_js_1.Task))
                    return;
                if (module.runOnStart)
                    module.exec();
                if (module.delay) {
                    setInterval(() => {
                        module.exec();
                    }, Number(module.delay));
                }
            });
        });
    }
}
exports.TaskHandler = TaskHandler;
//# sourceMappingURL=TaskHandler.js.map