import { z } from "zod";
import { AkairoModule, AkairoModuleOptions } from "../AkairoModule.js";
import type { TaskHandler } from "./TaskHandler.js";
export declare abstract class Task extends AkairoModule<TaskHandler, Task> {
    delay?: number;
    runOnStart: boolean;
    constructor(id: string, options?: TaskOptions);
    abstract exec(...args: any[]): any;
}
export type TaskOptions = AkairoModuleOptions & {
    delay?: number;
    runOnStart?: boolean;
};
export declare const TaskOptions: z.ZodObject<{
    category: z.ZodOptional<z.ZodString>;
    delay: z.ZodOptional<z.ZodNumber>;
    runOnStart: z.ZodOptional<z.ZodBoolean>;
}, "passthrough", z.ZodTypeAny, z.objectOutputType<{
    category: z.ZodOptional<z.ZodString>;
    delay: z.ZodOptional<z.ZodNumber>;
    runOnStart: z.ZodOptional<z.ZodBoolean>;
}, z.ZodTypeAny, "passthrough">, z.objectInputType<{
    category: z.ZodOptional<z.ZodString>;
    delay: z.ZodOptional<z.ZodNumber>;
    runOnStart: z.ZodOptional<z.ZodBoolean>;
}, z.ZodTypeAny, "passthrough">>;
//# sourceMappingURL=Task.d.ts.map