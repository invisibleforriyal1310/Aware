import type { Awaitable } from "discord.js";
import type { TaskHandlerEvents } from "../../typings/events.js";
import type { AkairoClient } from "../AkairoClient.js";
import { AkairoHandler, type AkairoHandlerOptions } from "../AkairoHandler.js";
import { Task } from "./Task.js";
export declare class TaskHandler extends AkairoHandler<Task, TaskHandler> {
    constructor(client: AkairoClient, options: AkairoHandlerOptions<Task, TaskHandler>);
    startAll(): void;
}
type Events = TaskHandlerEvents;
export interface TaskHandler extends AkairoHandler<Task, TaskHandler> {
    on<K extends keyof Events>(event: K, listener: (...args: Events[K]) => Awaitable<void>): this;
    once<K extends keyof Events>(event: K, listener: (...args: Events[K]) => Awaitable<void>): this;
}
export {};
//# sourceMappingURL=TaskHandler.d.ts.map