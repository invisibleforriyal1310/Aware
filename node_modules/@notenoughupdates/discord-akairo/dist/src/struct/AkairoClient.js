"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.AkairoClientOptions = exports.AkairoClient = void 0;
const discord_js_1 = require("discord.js");
const zod_1 = require("zod");
const Util_js_1 = require("../typings/Util.js");
const ClientUtil = __importStar(require("./ClientUtil.js"));
class AkairoClient extends discord_js_1.Client {
    constructor(options, clientOptions) {
        const combinedOptions = { ...options, ...(clientOptions ?? {}) };
        exports.AkairoClientOptions.parse(combinedOptions);
        super(combinedOptions);
        this.ownerID = combinedOptions.ownerID ?? [];
        this.superUserID = combinedOptions.superUserID ?? [];
        this.util = ClientUtil;
    }
    isOwner(user) {
        const id = this.users.resolveId(user);
        if (!id)
            return false;
        return Array.isArray(this.ownerID) ? this.ownerID.includes(id) : id === this.ownerID;
    }
    isSuperUser(user) {
        const id = this.users.resolveId(user);
        if (!id)
            return false;
        return Array.isArray(this.superUserID)
            ? this.superUserID.includes(id) || this.ownerID.includes(id)
            : id === this.superUserID || id === this.ownerID;
    }
}
exports.AkairoClient = AkairoClient;
exports.AkairoClientOptions = zod_1.z
    .object({
    ownerID: (0, Util_js_1.ArrayOrNot)(zod_1.z.string()).optional(),
    superUserID: (0, Util_js_1.ArrayOrNot)(zod_1.z.string()).optional()
})
    .passthrough();
//# sourceMappingURL=AkairoClient.js.map