"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.PermissionResolvableValidator = exports.PermissionKey = exports.ArrayOrNot = exports.MessageInstance = exports.SyncOrAsync = exports.MessageSendResolvable = void 0;
const discord_js_1 = require("discord.js");
const zod_1 = require("zod");
exports.MessageSendResolvable = zod_1.z.union([zod_1.z.string(), zod_1.z.instanceof(discord_js_1.MessagePayload), zod_1.z.record(zod_1.z.any())]);
const SyncOrAsync = (t) => zod_1.z.union([t, zod_1.z.promise(t)]);
exports.SyncOrAsync = SyncOrAsync;
exports.MessageInstance = zod_1.z.instanceof(discord_js_1.Message);
const ArrayOrNot = (t) => zod_1.z.union([t, zod_1.z.array(t)]);
exports.ArrayOrNot = ArrayOrNot;
exports.PermissionKey = zod_1.z.union(Object.keys(discord_js_1.PermissionFlagsBits).map(key => zod_1.z.literal(key)));
const BigIntBitFieldInstance = zod_1.z.instanceof(discord_js_1.BitField);
const BigIntStr = zod_1.z.string().regex(/^\d*$/);
exports.PermissionResolvableValidator = zod_1.z.union([
    zod_1.z.bigint(),
    BigIntStr,
    exports.PermissionKey,
    BigIntBitFieldInstance,
    zod_1.z.bigint().array(),
    BigIntStr.array(),
    exports.PermissionKey.array(),
    BigIntBitFieldInstance.array()
]);
//# sourceMappingURL=Util.js.map